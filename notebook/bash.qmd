---
title: "Bash commands in Quarto"
date: '`r format(Sys.Date(), "%Y-%m-%d")`'
date-format: "YYYY-MM-DD"
execute:
  echo: true
  cache: false
format:
   gfm:
     html-math-method: webtex
     toc: true
engine: knitr
---

The [principal languages supported by
Quarto](https://quarto.org/docs/faq/#what-programming-languages-are-supported-in-quarto)
are Python, R, Julia, and Observable JavaScript. Each Quarto document can be
optionally processed by a computational engine; the engine can be manually
specified or automatically detected based on the code chunks in the document.
For a `.qmd` document, the Knitr engine will be used if the is an `{r}` block;
the Jupyter engine will be used if there are any other executable code block,
such as `{python}`, `{julia}`, and `{bash}`, etc. However, we can override this
by explicitly [stating the
engine](https://quarto.org/docs/computations/execution-options.html#engine-binding).

Knitr supports the following languages.

```{r}
names(knitr::knit_engines$get())
```

## Output format

For displaying the output on GitHub, we can use [GitHub Flavoured
Markdown](https://quarto.org/docs/output-formats/gfm.html) (GFM) by specifying
`gfm` as our format in the YAML. See [GFM
Options](https://quarto.org/docs/reference/formats/markdown/gfm.html) for a
list of GFM output options.

## Hello, World

```{bash}
#| label: hello_world

echo Hello, World
```

## Loops

```{bash}
for i in {0..9}; do
   echo ${i}
done
```

## Version

Bash version used.

```{bash}
#| label: bash_version

bash --version
```
